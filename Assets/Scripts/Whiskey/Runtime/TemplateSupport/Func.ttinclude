<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#+
  string GenerateTemplateArgs(int j)
  {
      var res = new List<string>();
      for (var i = 0; i <= j; i++)
      {
          res.Add("TArg" + i);
      }

      return string.Join(", ", res);
  }

  string GenerateParamArgs(int j)
  {
      var res = new List<string>();
      for (var i = 0; i <= j; i++)
      {
          res.Add("TArg" + i + " arg"+ i);
      }

      return string.Join(", ", res);
  }

  string GenerateParamArgNames(int j)
  {
      var res = new List<string>();
      for (var i = 0; i <= j; i++)
      {
          res.Add(" arg"+ i);
      }

      return string.Join(", ", res);
  }

  string CamelCase(string className)
  {
      if (char.IsLower(className[0]))
      {
          return char.ToUpper(className[0]) + className.Substring(1);
      }
      else
      {
          return className;
      }
  }

  void SetOutputFolder(string newFolder)
  {
    CurrentOutputFolder = newFolder;
  }

  void SaveFile(string folder, string fileName, string content)
  {
      if (!Directory.Exists(folder))
      {
          Directory.CreateDirectory(folder);
      }

    using (FileStream fs = new FileStream(Path.Combine(folder, fileName.Trim() + ".cs"), FileMode.Create))
      {
          using (StreamWriter str = new StreamWriter(fs))
          {
              str.WriteLine(content);
              str.Flush();
          }
      }
  }

  void SaveGeneratedContent(string fileName, StringBuilder sb)
  {
    SaveFile(CurrentOutputFolder, fileName, PreGeneratedContent + sb.ToString() + PostGeneratedContent);
    sb.Remove(0, sb.Length);
  }
#>